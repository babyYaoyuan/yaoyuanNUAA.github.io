<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>YaoYuan Blog</title>
        <link>https://yaoyuannuaa.github.io/</link>
        <description>MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</description>
        <generator>Hugo 0.81.0 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>y_yao@nuaa.edu.cn (YaoYuan)</managingEditor>
        
        
            <webMaster>y_yao@nuaa.edu.cn (YaoYuan)</webMaster>
        
        
        <lastBuildDate>Sat, 27 Feb 2021 11:35:08 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="https://yaoyuannuaa.github.io/rss.xml" />
        
        
            <item>
                <title>2021 02 23</title>
                <link>https://yaoyuannuaa.github.io/posts/2021-02-23/</link>
                <guid isPermaLink="true">https://yaoyuannuaa.github.io/posts/2021-02-23/</guid>
                <pubDate>Sat, 27 Feb 2021 10:26:02 &#43;0800</pubDate>
                
                    <author>y_yao@nuaa.edu.cn (YaoYuan)</author>
                
                
                
                    <description>&lt;pre&gt;&lt;code class=&#34;language-flow&#34; data-lang=&#34;flow&#34;&gt;st=&amp;gt;start: 打开CSV文件
op=&amp;gt;operation: 按顺序读取文件中的数据
op1=&amp;gt;operation: 读取该条数据匹配到全长的位置
op2=&amp;gt;operation: 将位置信息保存到SVG图上
cond=&amp;gt;condition: 是否处理完所有的数据
sub1=&amp;gt;subroutine: 子流程
e=&amp;gt;end: 输出最后的SVG图
st-&amp;gt;op-&amp;gt;op1-&amp;gt;op2-&amp;gt;cond
cond(yes)-&amp;gt;e
cond(no)-&amp;gt;op

&lt;/code&gt;&lt;/pre&gt;</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>2021 02 22</title>
                <link>https://yaoyuannuaa.github.io/posts/2021-02-22/</link>
                <guid isPermaLink="true">https://yaoyuannuaa.github.io/posts/2021-02-22/</guid>
                <pubDate>Sat, 27 Feb 2021 10:26:00 &#43;0800</pubDate>
                
                    <author>y_yao@nuaa.edu.cn (YaoYuan)</author>
                
                
                
                    <description>&lt;h1 id=&#34;2021-02-22&#34;&gt;2021-02-22&lt;/h1&gt;
&lt;h2 id=&#34;跑步-&#34;&gt;跑步 √&lt;/h2&gt;
&lt;h2 id=&#34;git学习&#34;&gt;Git学习&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;新建一个git仓库&lt;/strong&gt;
&lt;pre&gt;&lt;code&gt;在你要创建的git根目录下
git init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确认修改&lt;/strong&gt;
&lt;pre&gt;&lt;code&gt;在修改了文件之后
git add &amp;lt;file&amp;gt;
将修改存到暂存区
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;确认修改
git commit -m &amp;quot;some information about this commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;code&gt;add&lt;/code&gt;之后只会将修改推送到暂存区。一次可以&lt;code&gt;add&lt;/code&gt;多个文件，只&lt;code&gt;commit&lt;/code&gt;一次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查看仓库状态&lt;/strong&gt;
&lt;pre&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本回退&lt;/strong&gt;
&lt;code&gt;git log&lt;/code&gt; 可以查看提交历史，确定要回退到哪个版本
要重返未来，用&lt;code&gt;git reflog&lt;/code&gt;查看历史命令，以便确定要回到未来的版本。
&lt;pre&gt;&lt;code&gt;git reset --hard &amp;lt;version&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修改撤销&lt;/strong&gt;
当你该乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用&lt;code&gt;git checkout -- &amp;lt;file&amp;gt;&lt;/code&gt;
当该乱了工作区某个文件的内容，并且添加到了暂存区时，分两步，第一步用命令&lt;code&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/code&gt;，就回到了场景一，第二步按场景1操作&lt;/li&gt;
&lt;/ol&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>2021 02 20</title>
                <link>https://yaoyuannuaa.github.io/posts/2021-02-20/</link>
                <guid isPermaLink="true">https://yaoyuannuaa.github.io/posts/2021-02-20/</guid>
                <pubDate>Sat, 27 Feb 2021 10:23:28 &#43;0800</pubDate>
                
                    <author>y_yao@nuaa.edu.cn (YaoYuan)</author>
                
                
                
                    <description>&lt;h1 id=&#34;2021-02-20&#34;&gt;2021-02-20&lt;/h1&gt;
&lt;h2 id=&#34;1magicblast&#34;&gt;1.magicblast&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;magicblast -query filtered_both.fas -subject HEV_Ref_M74506.1.fasta -out magic_out_1.sam&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;2samtools&#34;&gt;2.samtools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;将sam文件转换为bam文件。&lt;/strong&gt;
bam文件是二进制文件，占用空间比sam文本文件小，利用bam二进制文件的运算速度快。
&lt;code&gt;samtools view -bS magic_out_1.sam &amp;gt; magic_out_1.bam &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排序&lt;/strong&gt;
sort对bam文件进行排序。
&lt;code&gt;samtools sort magic_out_1.sam &amp;gt; magic_out_1.sort.bam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;
必须对bam文件进行默认情况下的排序后，该可以进行index，否则会报错
建立索引后将产生后续为.bai.的文件
&lt;code&gt;samtools index magic_out_1.sort.bam&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>Hello World</title>
                <link>https://yaoyuannuaa.github.io/posts/hello-world/</link>
                <guid isPermaLink="true">https://yaoyuannuaa.github.io/posts/hello-world/</guid>
                <pubDate>Sat, 27 Feb 2021 10:15:09 &#43;0800</pubDate>
                
                    <author>y_yao@nuaa.edu.cn (YaoYuan)</author>
                
                
                
                    <description></description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
    </channel>
</rss>
